#include <stdio.h>

// Function to count set bits in an integer
int countSetBits(int n)
{
    int count = 0;
    while (n > 0) {
        count += n & 1;
        n >>= 1;
    }
    return count;
}

// Function to count sum of set bits in an array
int countSumSetBits(int arr[], int n)
{
    int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += countSetBits(arr[i]);
    }
    return sum;
}

int main()
{
    int arr[] = {5, 2, 7, 10};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Sum of set bits in the array: %d\n", countSumSetBits(arr, n));

    return 0;
}
---------------------------------------------------------------------------
#include <stdio.h>

// Function to count clear bits in an integer
int countClearBits(int n)
{
    int count = 0;
    while (n > 0) {
        count += !(n & 1);
        n >>= 1;
    }
    return count;
}

// Function to count sum of clear bits in an array
int countSumClearBits(int arr[], int n)
{
    int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += countClearBits(arr[i]);
    }
    return sum;
}

int main()
{
    int arr[] = {5, 2, 7, 10};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Sum of clear bits in the array: %d\n", countSumClearBits(arr, n));

    return 0;
}
------------------------------------------------------